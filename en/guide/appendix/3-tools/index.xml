<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OpenChain KWG – 3. 오픈소스도구 (FOSSology, SW360)</title><link>https://openChain-project.github.io/OpenChain-KWG/en/guide/appendix/3-tools/</link><description>Recent content in 3. 오픈소스도구 (FOSSology, SW360) on OpenChain KWG</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://openChain-project.github.io/OpenChain-KWG/en/guide/appendix/3-tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Guide: FOSSology</title><link>https://openChain-project.github.io/OpenChain-KWG/en/guide/appendix/3-tools/fossology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/en/guide/appendix/3-tools/fossology/</guid><description>
&lt;p>오픈소스 컴플라이언스를 위해 소프트웨어 내에 포함된 오픈소스와 라이선스 정보를 검출하기 위해 소스코드 스캔 도구를 사용할 수 있다.&lt;/p>
&lt;p>&lt;img src="../fossology1.png" alt="https://www.fossology.org/">&lt;/p>
&lt;p>&lt;em>&lt;center>&amp;lt; &lt;a href="https://www.fossology.org/">https://www.fossology.org/&lt;/a> &amp;gt;&lt;/center>&lt;/em>&lt;/p>
&lt;p>Linux Foundation의 FOSSology 프로젝트는 이러한 스캔 도구를 개발하고 오픈소스로 공개해 누구나 자유롭게 사용할 수 있게 한 도구이다.&lt;/p>
&lt;h2 id="주요-특징">주요 특징&lt;/h2>
&lt;p>FOSSology는 웹기반의 프로그램으로 사용자는 웹사이트에 로그인하여 개별 파일 혹은 소프트웨어 패키지를 업로드할 수 있다. FOSSology는 업로드된 파일 내에 라이선스 텍스트와 Copyright 정보를 검출한다. 개발자는 사용하고자 하는 오픈소스의 라이선스가 무엇인지, Copyright은 어떻게 되는지에 대한 정보를 확인하고자 할때 FOSSology를 이용하는 것이 좋다. FOSSology는 개발자가 업로드한 오픈소스 패키지 내의 모든 파일을 스캔하여 각 파일 내 라이선스 관련 텍스트와 Copyright 정보를 자동으로 검출하고, 이를 리포트로 생성한다. FOSSology 주요 특징에 대한 자세한 내용은 다음 페이지를 참고할 수 있다. : &lt;a href="https://www.fossology.org/features/">https://www.fossology.org/features/&lt;/a>&lt;/p>
&lt;h2 id="설치">설치&lt;/h2>
&lt;p>기업 내에서 FOSSology를 사용하기 위해서는 사내에 FOSSology 서버를 구축해야 한다. 이를 위해 리눅스 기반의 서버 시스템에 FOSSology를 설치해야 한다. FOSSology는 다음 세 가지 방법으로 설치할 수 있다.&lt;/p>
&lt;ol>
&lt;li>Docker 사용&lt;/li>
&lt;li>Vagrant와 VirtualBox 사용&lt;/li>
&lt;li>Source build하여 설치&lt;/li>
&lt;/ol>
&lt;p>여기서는 가장 간편한 방법인 Docker를 사용하는 방법에 대해 설명한다.&lt;/p>
&lt;p>FOSSology는 컨테이너화 된 Docker 이미지를 Docker Hub (https://hub.docker.com/)를 통해 공개하고 있다. : &lt;a href="https://hub.docker.com/r/fossology/fossology">https://hub.docker.com/r/fossology/fossology&lt;/a>&lt;/p>
&lt;p>Pre-built 된 Docker 이미지는 다음 명령어를 사용하여 실행할 수 있다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$ docker run -p 8081:80 fossology/fossology
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Docker 이미지는 다음 URL과 계정 정보로 사용할 수 있다. : http://[IP_OF_DOCKER_HOST]:8081/repo&lt;/p>
&lt;ul>
&lt;li>Username : fossy&lt;/li>
&lt;li>Passwd : fossy&lt;/li>
&lt;/ul>
&lt;p>설치와 관련한 자세한 내용은 다음 페이지를 참고할 수 있다. : &lt;a href="https://github.com/fossology/fossology/blob/master/README.md">https://github.com/fossology/fossology/blob/master/README.md&lt;/a>&lt;/p>
&lt;h2 id="테스트-서버">테스트 서버&lt;/h2>
&lt;p>FOSSology를 설치할 수 있는 시스템 구축이 곤란한 상황이라면, FOSSology Project에서 제공하는 테스트 서버를 이용할 수 있다. FOSSology 프로젝트에서는 테스트를 위한 환경을 제공한다. (테스트 서버는 예고없이 중단될 수 있다.)&lt;/p>
&lt;p>사용자는 다음 계정으로 FOSSology 테스트 서버에 접속하여 FOSSology 기능을 시험해볼 수 있다.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;p>테스트 서버 URL: &lt;a href="https://fossology.osuosl.org/">https://fossology.osuosl.org/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Username: fossy&lt;/li>
&lt;li>Password: fossy&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>&lt;img src="../fossology2.png" alt="">&lt;/p>
&lt;h2 id="basic-workflow">Basic Workflow&lt;/h2>
&lt;p>FOSSology의 기본 사용 절차는 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>사용하고자 하는 오픈소스의 라이선스와 Copyright 정보를 확인하기 위해 오픈소스의 소스 코드를 하나의 파일로 압축하여 FOSSology에 업로드한다.&lt;/li>
&lt;li>이를 위해 메뉴 &amp;gt; Upload &amp;gt; From File을 선택합니다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://t1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/9399/image/Oywr9jqM09g1SfxfZ-2HERmYA_8" alt="">&lt;/p>
&lt;ul>
&lt;li>업로드할 파일을 선택하고 Upload 버튼을 클릭한다.&lt;/li>
&lt;li>업로드가 완료되면 Job Agent에 의해 자동으로 분석을 수행한다.&lt;/li>
&lt;li>메뉴 &amp;gt; Jobs &amp;gt; My Recent Jobs에서 분석 중인 Status를 확인할 수 있다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://t1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/9399/image/9IKts-8lH7YK_Dat124-hEw_q4I" alt="">&lt;/p>
&lt;ul>
&lt;li>분석이 완료되면 메뉴 &amp;gt; Browse에서 분석 결과를 확인할 수 있다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://t1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/9399/image/C62vBvaVNeBLAqrRrx-XKoeuMhg" alt="">&lt;/p>
&lt;ul>
&lt;li>개별 파일을 선택하면 FOSSology가 검출한 라이선스 관련 텍스트가 무엇인지 확인할 수 있다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://t1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/9399/image/9idwgtBqNj7YAl7Wg0i98QJ5b4w" alt="">&lt;/p>
&lt;ul>
&lt;li>메뉴 &amp;gt; Browser &amp;gt; 파일 혹은 디렉터리를 선택 &amp;gt; Copyright/Email/Url/Author에서는 FOSSology가 검출한 Copyright/Email/Url/Author 정보를 보여다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://t1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http://t1.daumcdn.net/brunch/service/user/9399/image/NrjeCqal75rJ1bwGLPPmjhBEn4Q" alt="">&lt;/p>
&lt;p>사용자는 FOSSology는 이렇게 분석한 결과가 유효한지 여부에 대해 확인 후 잘못 검출된 항목에 대해서는 분석 결과에서 제외시키는 작업을 할 수 있다. FOSSology는 이를 Clearing 과정이라고 설명하며, 자세한 사항은 다음 페이지를 참고할 수 있다. : &lt;a href="https://www.fossology.org/get-started/basic-workflow/">https://www.fossology.org/get-started/basic-workflow/&lt;/a>&lt;/p>
&lt;p>위와 같은 방법으로 사용하고자 하는 오픈소스의 라이선스는 무엇인지, Copyright 정보는 어떻게 되는지를 간단히 확인할 수 있다.&lt;/p></description></item><item><title>Guide: SW360</title><link>https://openChain-project.github.io/OpenChain-KWG/en/guide/appendix/3-tools/sw360/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openChain-project.github.io/OpenChain-KWG/en/guide/appendix/3-tools/sw360/</guid><description>
&lt;p>오픈소스를 포함하는 제품을 개발하고 배포하는 기업이라면 각 제품과 릴리스 버전마다 사용한 오픈소스의 버전, 라이선스 등의 정보를 수집하고 추적해야 한다. 이를 통해 기업은 올바른 오픈소스 컴플라이언스 활동을 수행할 수 있다.&lt;/p>
&lt;p>특히, NVD (https://nvd.nist.gov/vuln)에서 특정 오픈소스 버전에 보안 취약점이 보고 되었을때, 해당 버전을 사용하고 있는 제품이 무엇인지 추적을 할 수 없다면, 그 기업은 어느 제품에 보안 패치를 적용해야 할 지 알 수 없는 상황에 처하게 되고, 그 기업의 제품들은 보안취약점에 그대로 노출이 될 수 밖에 없다.&lt;/p>
&lt;p>이렇듯, 오픈소스 정보를 추적하는 활동은 꼭 필요하다. 기업들은 이를 위해 자체 시스템을 구축하거나, 상용 서비스를 구매하여 사용하기도 한다. SW360은 Eclipse 재단에서 후원하는 오픈소스로서 소프트웨어 BOM에 대한 정보를 수집 및 추적하기 위한 웹 애플리케이션 및 저장소를 제공한다.&lt;/p>
&lt;p>&lt;img src="../sw3601.png" alt="https://www.eclipse.org/sw360/">&lt;/p>
&lt;p>&lt;em>&lt;center>&amp;lt; &lt;a href="https://www.eclipse.org/sw360/">https://www.eclipse.org/sw360/&lt;/a> &amp;gt;&lt;/center>&lt;/em>&lt;/p>
&lt;h2 id="주요-특징">주요 특징&lt;/h2>
&lt;p>SW360은 웹 기반의 UI를 제공하며 주요 기능은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>제품에 사용된 컴포넌트 추적&lt;/li>
&lt;li>보안 취약점 평가&lt;/li>
&lt;li>라이선스 의무 관리&lt;/li>
&lt;li>고지문 등 법적 문서 생성&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/MPrOy70nOVSCRiorql9Momzi18lG66Liqttyutjwc9LAhVUwqmVf8xyeEkg085Pm1OYxwPRzyh68Th93ZlKA3fjG5_PnsBQijwUGkRa7o72h8Jco_7BcIwfoR7FGu8hsZA8n5ASq" alt="https://www.eclipse.org/sw360/">&lt;/p>
&lt;h2 id="설치">설치&lt;/h2>
&lt;p>SW360은 다음과 같이 구성된다.&lt;/p>
&lt;ul>
&lt;li>Frontend : Liferay-(Tomcat-)based portal application&lt;/li>
&lt;li>Backend : Tomcat-based thrift service&lt;/li>
&lt;li>Database : CouchDB&lt;/li>
&lt;/ul>
&lt;p>Project 구조와 설치를 위해 요구되는 소프트웨어 등 자세한 내용은 README의 Required software 부분에서 확인할 수 있다. : &lt;a href="https://github.com/eclipse/sw360/blob/master/README.md">https://github.com/eclipse/sw360/blob/master/README.md&lt;/a>&lt;/p>
&lt;p>SW360은 다음 세 가지의 설치 방법을 제공한다. 사용자는 이 중 하나를 선택하여 설치할 수 있다.&lt;/p>
&lt;ol>
&lt;li>Vagrant (&lt;a href="https://www.vagrantup.com/">https://www.vagrantup.com/&lt;/a>) 기반 설치 : Vagrant는 가상화 인스턴스를 관리하는 도구로서 sw360vagrant에서는 SW360을 한 번에 Deploy 하기 위한 환경을 제공한다. : &lt;a href="https://github.com/sw360/sw360vagrant">https://github.com/sw360/sw360vagrant&lt;/a>&lt;/li>
&lt;li>SW360의 구성요소를 개별적으로 설치할 수 있다. : &lt;a href="https://github.com/eclipse/sw360">https://github.com/eclipse/sw360&lt;/a>&lt;/li>
&lt;li>Docker를 통해 Deploy 할 수 있다. : &lt;a href="https://github.com/sw360/sw360chores">https://github.com/sw360/sw360chores&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>여기서는 CentOS 7.6 시스템에 Vagrant 기반으로 설치하여 Deploy하는 방법을 소개한다. 자세한 사항은 README를 참고한다. : &lt;a href="https://github.com/sw360/sw360vagrant/blob/master/README.md">https://github.com/sw360/sw360vagrant/blob/master/README.md&lt;/a>&lt;/p>
&lt;h3 id="1-사전-설치">1) 사전 설치&lt;/h3>
&lt;p>vagrant box에 SW360을 설치하기 위해서는 openjdk, VirtualBox 및 Vagrant를 설치해야 다. 먼저 openjdk 1.8.0을 설치한다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$ yum install java-1.8.0-openjdk
$ java -version
openjdk version &amp;#34;1.8.0_191&amp;#34;
OpenJDK Runtime Environment (build 1.8.0_191-b12)”
OpenJDK 64-Bit Server VM (build 25.191-b12, mixed mode)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>VirtualBox를 설치한다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$ sudo wget https://download.virtualbox.org/virtualbox/rpm/el/virtualbox.repo -P /etc/yum.repos.d
$ sudo yum install VirtualBox-5.2
&lt;/code>&lt;/pre>&lt;/div>&lt;p>CentOS 7에서 VirtualBox 설치 시, “kernel module is not loaded’ 에러가 발생할 경우, kernel-devel을 설치하여 해결한 후 VirtualBox를 재설치한다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$ sudo yum install https://centos7.iuscommunity.org/ius-release.rpm
$ sudo yum install dkms
$ sudo yum install kernel-devel
# reboot
$ sudo /sbin/vboxconfig
$ systemctl status vboxdrv
● vboxdrv.service - VirtualBox Linux kernel module
Loaded: loaded (/usr/lib/virtualbox/vboxdrv.sh; enabled; vendor preset: disabled)
Active: active (exited) since Wed 2020-02-19 09:06:02 KST; 20min ago
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Vagrant와 vagrant-aws plugin을 설치한다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$ sudo yum install https://releases.hashicorp.com/vagrant/2.2.6/vagrant_2.2.6_x86_64.rpm
# vagrant-aws plugin 설치
$ vagrant plugin install vagrant-aws
&lt;/code>&lt;/pre>&lt;/div>&lt;p>그리고, sw360vagrant 코드를 Clone 한다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$ git clone https://github.com/sw360/sw360vagrant.git
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-dependency-다운로드">2) Dependency 다운로드&lt;/h3>
&lt;p>Vagrant box를 빌드하는 시간을 줄이기 위해 Dependency Package들을 미리 다운로드 받는다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$ cd sw360vagrant
$ ./download-packages.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>그러면 다음의 package들이 ./shared/package 폴더 안에 다운로드 된다.&lt;/p>
&lt;ul>
&lt;li>Liferay 7.2.1 CE GA2 with Tomcat (9.0.17)&lt;/li>
&lt;li>Postgresql-42.2.9 ODBC client for Java as *.jar file&lt;/li>
&lt;li>SW 360에서 필요한 11개의 *.jar 파일&lt;/li>
&lt;li>Thrift 0.11&lt;/li>
&lt;li>A box images from the Ubuntu 16.04 LTS (xenial-server-cloudimg-amd64-vagrant.box)&lt;/li>
&lt;/ul>
&lt;h3 id="3-base-box-생성">3) Base box 생성&lt;/h3>
&lt;p>이제 다음 명령어로 Base box를 생성한다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$ cd generate-box
$ ./generate_box.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>이 작업은 수십 분 소요될 수 있다.&lt;/p>
&lt;h3 id="4-box-실행">4) Box 실행&lt;/h3>
&lt;p>다음 명령어로 Box를 실행한다.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text"># If you have built a vagrant box from this directory earlier, you will have to destroy it first via
$ vagrant destroy
$ cd ../sw360-single
$ vagrant up
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Box를 실행하면 liferay, postgresql 및 couchdb가 구성된다. 이상없이 실행이 될 경우, &lt;a href="https://localhost:8443/">https://localhost:8443/&lt;/a> 로 Liferay 화면에 접근할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/leof_ntxQlxjDeD91E7ZfwWY0ftUlD0D_L58AkeNJb_bEFFzKvuL28yzb4iIA6-bAuSfQydo-gVBlnn5EVGGBKcPh0-6Y7p2Qbar74qpB4uwa_nibrV535NJwEIpWXZPFeNUSRd-" alt="">&lt;/p>
&lt;h3 id="5-sw360-layout-deploy">5) SW360 Layout Deploy&lt;/h3>
&lt;p>마지막 단계는 Liferay에서 SW360의 Layout을 Deploy하는 것이다. 이 작업은 아직 자동화가 되지 않아 관리자가 수동으로 수행해야 다. &lt;a href="https://localhost:8443/">https://localhost:8443/&lt;/a>에 접근하여 다음 계정으로 로그인한다.&lt;/p>
&lt;ul>
&lt;li>id : &lt;a href="mailto:setup@sw360.org">setup@sw360.org&lt;/a>&lt;/li>
&lt;li>pw : sw360fossy&lt;/li>
&lt;/ul>
&lt;p>이후에는 다음 사이트의 안내에 따라 Layout deploy를 수행한다. &lt;a href="https://github.com/eclipse/sw360/wiki/Deploy-Liferay7">https://github.com/eclipse/sw360/wiki/Deploy-Liferay7&lt;/a>&lt;/p>
&lt;p>Deploy가 완료되면 다음과 같은 화면을 볼 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/INu1-WWi1-SA9P61IMNlgZhugTXbiwbSKUOu2eWq_d5sIIp8NfqxQntwId41ZDmTG6_5Ope8GdU1J2S0adaJDolM09dtfkwIbOE2gTDC4MZXMxhX9kN28E4Yj8a3deBUHBL7yCqj" alt="">&lt;/p>
&lt;h2 id="basic-workflow">Basic Workflow&lt;/h2>
&lt;h3 id="1-license-등록">1) License 등록&lt;/h3>
&lt;p>SW360을 처음 설치하면 먼저 자주 사용하는 오픈소스 라이선스 들을 등록해야 한다. 라이선스 다음과 같은 정보를 포함한다.&lt;/p>
&lt;ul>
&lt;li>Full Name&lt;/li>
&lt;li>Short Name&lt;/li>
&lt;li>License Type&lt;/li>
&lt;li>GPL-2.0 Compatibility (예: yes, no)&lt;/li>
&lt;li>License Text&lt;/li>
&lt;/ul>
&lt;p>메뉴 &amp;gt; Licenses &amp;gt; Add License를 선택하면 다음과 같이 Create License 화면으로 진입한다.&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/8bn6z_39PK5WrjP7mzhHrTwfM5PU19QT3TiQnAatOYywVwcGLJGFMmMgMkzh4CKAPM0SOOy7VDoboaj9OKpD1QEZv6KWOeWxZfqGA_2geYrYOBm2kOVzrNOmGPVK-8hzJvBZ-klT" alt="">&lt;/p>
&lt;p>이와 같이 라이선스를 하나씩 수동으로 등록하는 일은 상당히 수고스러울 수 있는데, 다행히 SW360은 SPDX License List를 한 번에 Import 하는 기능을 제공한다. 메뉴 &amp;gt; Admin &amp;lt; Import SPDX Information을 클릭한다.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/d8ZK-dD34z1yKZn-szPNrN7iT4zg1EQnKnAv4QcPslSR0-laETy37ArojuweqSsxpWuvGXtdF5FabiWk57So-bD_iiEx7eVIR6tWDsYO2SkaCdlKr6ELDN9y_NdkqWFbQgRF2lXN" alt="">&lt;/p>
&lt;p>그러면, 곧 SPDX License List가 자동으로 등록됩니다. 메뉴 &amp;gt; Licenses에서 338개의 License가 등록된 것을 확인할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/Ucjuo09uJKhEhACZ90y98PszgSiCGtlDotH8mbTXJ2ePnF3TquzNX2yWzOCENTKNk1UjMJhyFgHxTCH6lxvZJg1l07M0hCc-v-14loAJ0efUU9V9hqS9mUabAT9QNysYL8E2tgIf" alt="">&lt;/p>
&lt;h3 id="2-component-및-release-등록">2) Component 및 Release 등록&lt;/h3>
&lt;p>SW360에서 Component는 하나의 소프트웨어 단위이다. 여기에는 다양한 형태의 소프트웨어가 해당할 수 있으며, 그 예는 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>오픈소스 소프트웨어&lt;/li>
&lt;li>라이브러리&lt;/li>
&lt;li>3rd party 소프트웨어&lt;/li>
&lt;/ul>
&lt;p>Component는 다음과 같은 정보를 포함한다.&lt;/p>
&lt;ul>
&lt;li>Component Name&lt;/li>
&lt;li>Main Licenses&lt;/li>
&lt;li>Categories (예: Library, Cloud, Mobile, &amp;hellip;)&lt;/li>
&lt;li>Component Type (예: OSS, Internal, InnerSource, Service, Freeware)&lt;/li>
&lt;li>Default Vendor&lt;/li>
&lt;li>Homepage URL&lt;/li>
&lt;/ul>
&lt;p>Release는 Component에서 하나의 Version을 가리키는 단위이다. 따라서 하나의 Component는 여러 개의 Release를 가질 수 있다. Release는 하나의 Component 하위에 생성되어 관리된다.&lt;/p>
&lt;p>Release는 다음과 같은 정보들을 포함한다.&lt;/p>
&lt;ul>
&lt;li>Component Name&lt;/li>
&lt;li>Version&lt;/li>
&lt;li>License&lt;/li>
&lt;li>Download URL&lt;/li>
&lt;li>CPE ID (예: cpe:2.3:a:apache:maven:3.0.4)&lt;/li>
&lt;/ul>
&lt;p>예를 들어, zlib-1.2.8을 등록해야 한다면, 먼저 Component에 zlib을 먼저 등록한 후, Release에 zlib 1.2.8을 등록한다. Menu &amp;gt; Components &amp;gt; Add Component를 선택하면 Create Component 화면으로 진입하여 zlib에 대한 정보를 등록할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/0a3ecmmFzumTZTaoWCOZPKkQIZLJwbPoAaduCTfwQMH_N67DPaMpTkerA4LOynwkl_nLkNT-pRh-rKzj4XHtBjoTkVMW9g06Rywryk3wbAj-Y3ONDg16VcGepMEm7m7Y8M3iDWyH" alt="">&lt;/p>
&lt;p>Component를 생성하면, Components &amp;gt; Releases &amp;gt; Add Release에서 zlib-1.2.8 version에 대한 정보를 등록할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh4.googleusercontent.com/ynUEB5-rGVYDirFghLx2v3tUt-uh-WL3YTN0siaGZWBrWQKYnIiV3B04mvdv3nZUW7t_U2Gl8msV_es1X181uq95YAp1bnqa0e3QLshhd1zhqk6z8ubPeEfo74cKdwho95_NyI1J" alt="">&lt;/p>
&lt;p>하나의 zlib이라는 Component에 1.2.8과 1.2.11 version을 각각의 Release로 등록하였을 때, Release Overview 화면에서 다음과 같이 2개의 Release가 존재하는 것을 볼 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/GxgMJQbNjRBNxMTMBvqEXNFNElXGXoCnaksCMs46ydREIrqrj7dFxMK0YkvjviHYMCiHY07xlR-Xixpa_C5nMFLzih0dXZAtv-6yKg4RdADJxr5qmDwhAEopVOaVNqzVWc3gMpLq" alt="">&lt;/p>
&lt;p>SW360은 다수의 Component 정보를 Import 시키기 위한 기능을 제공한다. 메뉴 &amp;gt; Admin &amp;gt; Import / Export에 CSV template에 등록을 원하는 Component 정보를 입력 후 Import 할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/VInFwWAV-1lG1E7zFQPvn1GIlYPPY5ToGbSa49Brg7XuB-AwyCEHA9han0EUij1KX3c8aN2UZ1mKkN-5Y4BNv8LOV3O5YoypLQ7EF43QFPAU9L18XT57Ec5eoneswtGtt3rMSPoQ" alt="">&lt;/p>
&lt;p>단, 이 기능은 2020년 2월 기준 아직 안정적으로 동작하지 않을 수 있다.&lt;/p>
&lt;h3 id="3-project-생성">3) Project 생성&lt;/h3>
&lt;p>Project는 하나의 제품을 가리킨다. 사업 유형에 따라 제품일수도 있고, 서비스 혹은 소프트웨어 일수도 있다. Project에는 제품에 사용된 Component/Release를 등록하여 관리한다.&lt;/p>
&lt;p>Project 생성 시에는 다음과 같은 정보를 등록한다.&lt;/p>
&lt;ul>
&lt;li>Project Name&lt;/li>
&lt;li>Version&lt;/li>
&lt;li>Project type (예: Product, Customer Project, Service, Internal Project, InnerSource)&lt;/li>
&lt;/ul>
&lt;p>메뉴 &amp;gt; Projects &amp;gt; Add Project를 통해 Project를 생성할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh6.googleusercontent.com/6gNtLci53U6zaU6Th5SHousuZ4VUijzuYjiJJlB0R6JwiHG4ggjb0RcnRYDkZCBhE2dMP2gGbT4qmB2FE5O8EW8hTfv1lgM4_XN0vzQUkttfTbX2cF0aNftHYuUy9EXczT2LzLO5" alt="">&lt;/p>
&lt;p>Project를 생성하고 나면, 포함하는 Release나 하위 Project를 등록한다. 메뉴 &amp;gt; Projects에서 해당 Project를 선택하면 “Linked Releases and Projects”에서 Linked Projects와 Linked Releases를 등록할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh4.googleusercontent.com/ZjD7r7EzxfdQ4bhw4ODsChydb6Vgqj1m4Ad0cWlYtyYXO40MCbPpTHHcy-wJmbHeA_FxTa66Mpza6-9ohu0e93b7BaGb7Zc9soTA3mGCHGnyGURukRUnJS_duI7T8IL2aTgMFzjB" alt="">&lt;/p>
&lt;p>다음은 SuperCalc라는 Project에 OpenSSL 1.0.1과 zlib 1.2.8을 Linked Releases로 등록한 이후의 화면이다.&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/tZCshPwxtukNLvfL-f-LfNOH-4ATof0bIGxpghVKXQ9QMBgoc_t0ROJMYafS9V4PuRaOOEW9zp25yk0gFA_kcaoRN83UKwUaFhaXxSWg7xPWvsYoJ_-pZkROkey1mYVTqGxKsCRu" alt="">&lt;/p>
&lt;h2 id="4-보안-취약점-관리">4. 보안 취약점 관리&lt;/h2>
&lt;p>SW360은 등록된 Release에 대해 보안 취약점이 있는지 자동으로 확인할 수 있다. 이를 위해 SW360은 CVE 정보를 주기적으로 수집하도록 스케쥴링하는 기능을 제공한다. 메뉴 &amp;gt; Admin &amp;gt; Schedule 에서 CVE SEARCH 정보를 24시간마다 수집하도록 스케쥴링을 설정할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/V2AJbexZqJJqwFYD1kFpjdZ7zVM9PCd-I_6MSBu3djO2Gi6gQxxQpKoqqsETxDaSkpDXOKFOp9h0Fps1xYHEphesVX9ECwBwnSX5cWdziXoohh-CMmqRh_wVkwUD8dZE9w1raJRk" alt="">&lt;/p>
&lt;p>이렇게 스케쥴링을 설정하면 SW360은 정해진 시간에 CVE Search 사이트(&lt;a href="https://cve.circl.lu/">https://cve.circl.lu/&lt;/a>)에서 CVE 정보를 수집한다. 수집한 CVE 정보는 메뉴 &amp;gt; Vulnerabilities에서 확인할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/dpIMyX7qCMdnibNihuL6RBSKg2fEckbOBPWJEtw08mY4quhv6Hh3BlgFIeydPOS6N8rF6ZSs4hpZgBGcXbcJI9saFDyfv4i-TCvxV5z-4LD9ZXpKah0jQU45j3iibxFpYoa7Hj9u" alt="">&lt;/p>
&lt;p>이렇게 Vulnerabilities 정보가 수집된 이후에는 생성한 Project에 보안 취약점이 있는지 조회할 수 있다. 위에서 생성한 SuperCalc Project에서는 85개의 보안 취약점이 보고된 것을 확인할 수 있다.&lt;/p>
&lt;p>&lt;img src="https://lh5.googleusercontent.com/lGeLbWHIBk6y2OSOXskcp4A2c5od0eTH6n7U5YG0p4cwTrrX02b6TpeRqJ7VXg5aUE7qDP2X2f8o4Rj1JsPHhZ-CUdLiy80O532Cgw-h_P9r-jHdL61QaXhFOPxIjTlX1cg9XPk5" alt="">&lt;/p>
&lt;p>이와 같은 방법으로 기업에서 개발/배포하는 소프트웨어를 SW360에 등록하여 관리한다면, 오픈소스 컴플라이언스뿐만 아니라 보안 취약점에 대해서도 리스크를 최소화할 수 있는 형태로 관리가 가능하다.&lt;/p>
&lt;p>또한 SW360은 위와 같은 Web Interface 뿐만 아니라 대부분의 기능을 REST API로 제공하여서 FOSSology 등의 다른 도구와의 연동이 가능하다. : &lt;a href="https://github.com/eclipse/sw360/wiki/Dev-REST-API">https://github.com/eclipse/sw360/wiki/Dev-REST-API&lt;/a>&lt;/p>
&lt;p>즉, 소스 코드 스캐닝 도구의 분석 결과를 SW360에 Import 시키는 등의 방법으로 DevOps에 Integration 시켜서 Project, Release 등록을 자동화시켜서 관리한다면 효율성이 크게 증가될 것이다.&lt;/p></description></item></channel></rss>